generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Datoteka {
  idDat       Int     @id @default(autoincrement())
  owner       String  @db.VarChar(50)
  path        String  @db.VarChar(2000)
  imeDatoteke String? @db.VarChar(500)
  Size        String? @db.VarChar(20)
  Users       Users   @relation(fields: [owner], references: [userID], onUpdate: Restrict, map: "datoteka_ibfk_1")

  @@index([owner], map: "owner")
}

model Users {
  userID         String           @id @db.VarChar(20)
  email          String           @unique(map: "email") @db.VarChar(50)
  password       String           @db.VarChar(500)
  name           String           @db.VarChar(20)
  surname        String           @db.VarChar(50)
  AvailableSize  String?          @default("5000000001") @db.VarChar(20)
  UsedSize       String?          @default("0") @db.VarChar(20)
  Datoteka       Datoteka[]
  ForgotPassword ForgotPassword[]
  Session        Session[]
}

model Session {
  Token   String   @db.VarChar(50)
  UserID  String   @db.VarChar(20)
  expires DateTime @db.DateTime(0)
  Users   Users    @relation(fields: [UserID], references: [userID], onUpdate: Restrict, map: "session_ibfk_1")

  @@id([Token, UserID])
  @@index([UserID], map: "UserID")
}

model ForgotPassword {
  Token   String   @db.VarChar(100)
  UserID  String   @db.VarChar(20)
  expires DateTime @db.DateTime(0)
  Users   Users    @relation(fields: [UserID], references: [userID], onUpdate: Restrict, map: "forgotpassword_ibfk_1")

  @@id([UserID, Token])
}

model Trash {
  idDat       Int      @id
  owner       String   @db.VarChar(50)
  path        String   @db.VarChar(2000)
  imeDatoteke String?  @db.VarChar(500)
  added       DateTime @db.Date
  Size        String?  @db.VarChar(20)
}
